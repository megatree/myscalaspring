<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">
    <!--<include resource="org/springframework/boot/logging/logback/base.xml"/>-->
    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
    <property name="LOG_HOME" value="/indexdata/log"/>
    <!-- 彩色日志 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>
    <property name="CONSOLE_LOG_PATTERN"
              value="${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>
    <property name="FILE_LOG_PATTERN"
              value="${FILE_LOG_PATTERN:-%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>

    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <!--<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>-->
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>utf-8</charset>
        </encoder>
    </appender>

    <!-- 出错日志 appender -->  
    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">  
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">  
              <!-- 按天回滚 daily -->  
              <!--log.dir在maven profile里配置 -->
            <fileNamePattern>${LOG_HOME}/error/refresh_error.log.%d{yyyy-MM-dd}.log</fileNamePattern>  
              <!-- 日志最大的历史 30天 -->
            <maxHistory>30</maxHistory>  
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
            <charset>utf-8</charset>
        </encoder>
        <!--日志文件最大的大小-->
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>100MB</MaxFileSize>
        </triggeringPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter"><!-- 只打印错误日志 -->
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
          
    </appender>
     
    <!-- 访问日志 appender -->  
    <appender name="ACCESS" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">  
            <!-- 按天回滚 daily -->
            <fileNamePattern>${LOG_HOME}/access/refresh_access.log.%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- 日志最大的历史 30天 -->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
            <charset>utf-8</charset> 
        </encoder>
          
        <append>true</append> 
    </appender>

    <!-- info日志 appender -->  
    <appender name="INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">  
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">  
            <!-- 按天回滚 daily -->
            <fileNamePattern>${LOG_HOME}/info/refresh_info.log.%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- 日志最大的历史 30天 -->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
            <charset>utf-8</charset> 
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
          
    </appender>
    <!-- warn日志 appender -->
    <appender name="WARN" class="ch.qos.logback.core.rolling.RollingFileAppender">  
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 按天回滚 daily -->
            <fileNamePattern>${LOG_HOME}/warn/refresh_warn.log.%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- 日志最大的历史 30天 -->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
          
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
            <charset>utf-8</charset> 
        </encoder>
        <append>true</append>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>WARN</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
          
    </appender>

    <!--日志打印的包的范围，及分类日志文件存储 -->
    <logger name="net.megatree.helloworld" additivity="false">
        <springProfile name="dev">
            <level value="DEBUG"/>  
        </springProfile>
        <springProfile name="test">
            <level value="DEBUG"/>  
        </springProfile>
        <springProfile name="prod">
            <level value="WARN"/>  
        </springProfile>
         

        <springProfile name="dev">
            <appender-ref ref="ACCESS"/>
            <appender-ref ref="INFO"/>
            <appender-ref ref="STDOUT"/>
        </springProfile>
          
        <appender-ref ref="WARN"/> 
        <appender-ref ref="ERROR"/>  
          
    </logger>
    <logger name="org.mybatis" additivity="false">  
        <springProfile name="dev">
            <level value="DEBUG"/>  
        </springProfile>
        <springProfile name="test">
            <level value="DEBUG"/>  
        </springProfile>
        <springProfile name="prod">
            <level value="WARN"/>  
        </springProfile>
         

        <springProfile name="dev">
            <appender-ref ref="ACCESS"/>
            <appender-ref ref="INFO"/>
            <appender-ref ref="STDOUT"/>
        </springProfile>
          
        <appender-ref ref="WARN"/> 
        <appender-ref ref="ERROR"/>  
    </logger>
    <logger name="java.sql" additivity="false">  
        <springProfile name="dev">
            <level value="DEBUG"/>  
        </springProfile>
        <springProfile name="test">
            <level value="DEBUG"/>  
        </springProfile>
        <springProfile name="prod">
            <level value="WARN"/>  
        </springProfile>
         

        <springProfile name="dev">
            <appender-ref ref="ACCESS"/>
            <appender-ref ref="INFO"/>
            <appender-ref ref="STDOUT"/>
        </springProfile>
          
        <appender-ref ref="WARN"/> 
        <appender-ref ref="ERROR"/>  
    </logger>
    <!-- 日志输出级别 -->
    <root level="INFO">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="WARN"/>
    </root>
     
</configuration>